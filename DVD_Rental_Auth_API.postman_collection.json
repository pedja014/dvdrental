{
	"info": {
		"_postman_id": "dvd-rental-auth-api",
		"name": "DVD Rental Auth API",
		"description": "Complete authentication system for DVD Rental Management API following Django Styleguide",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "dvd-rental-auth"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('username', response.user.username);",
									"    pm.environment.set('email', response.user.email);",
									"    console.log('User registered successfully:', response.user.username);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"confirm_password\": \"SecurePass123!\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								""
							]
						},
						"description": "Register a new user account. The account will be created as inactive and an activation email will be sent."
					},
					"response": [
						{
							"name": "Successful Registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"SecurePass123!\",\n    \"confirm_password\": \"SecurePass123!\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Account created successfully. Please check your email for activation link.\",\n    \"user\": {\n        \"id\": 1,\n        \"username\": \"johndoe\",\n        \"email\": \"john@example.com\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"role\": \"customer\",\n        \"is_active\": false,\n        \"date_joined\": \"2024-01-01T12:00:00Z\"\n    }\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe\",\n    \"email\": \"invalid-email\",\n    \"password\": \"weak\",\n    \"confirm_password\": \"different\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"type\": \"ValidationError\",\n        \"message\": \"Validation failed\",\n        \"code\": \"validation_error\",\n        \"status_code\": 400,\n        \"fields\": {\n            \"email\": [\"Enter a valid email address.\"],\n            \"password\": [\"Password must be at least 8 characters long.\", \"Password must contain at least one uppercase letter.\", \"Password must contain at least one number.\", \"Password must contain at least one special character.\"],\n            \"confirm_password\": [\"Password fields didn't match.\"]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Activate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access);",
									"    pm.environment.set('refresh_token', response.refresh);",
									"    console.log('User activated successfully:', response.user.username);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{activation_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/activate/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"activate",
								""
							]
						},
						"description": "Activate user account using token from activation email. Returns JWT tokens for immediate login."
					},
					"response": [
						{
							"name": "Successful Activation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/activate/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"activate",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Account activated successfully!\",\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"user\": {\n        \"id\": 1,\n        \"username\": \"johndoe\",\n        \"email\": \"john@example.com\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"role\": \"customer\",\n        \"is_active\": true,\n        \"date_joined\": \"2024-01-01T12:00:00Z\"\n    }\n}"
						},
						{
							"name": "Invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"invalid-token\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/activate/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"activate",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"type\": \"InvalidTokenError\",\n        \"message\": \"Invalid activation token.\",\n        \"code\": \"invalid_token\",\n        \"status_code\": 400\n    }\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access);",
									"    pm.environment.set('refresh_token', response.refresh);",
									"    console.log('Login successful for:', response.user.username);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login",
								""
							]
						},
						"description": "Login with username/email and password. Returns JWT access and refresh tokens."
					},
					"response": [
						{
							"name": "Successful Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe\",\n    \"password\": \"SecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"user\": {\n        \"id\": 1,\n        \"username\": \"johndoe\",\n        \"email\": \"john@example.com\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"role\": \"customer\",\n        \"is_active\": true,\n        \"date_joined\": \"2024-01-01T12:00:00Z\"\n    }\n}"
						},
						{
							"name": "Invalid Credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe\",\n    \"password\": \"wrongpassword\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"type\": \"InvalidCredentialsError\",\n        \"message\": \"Invalid username or password.\",\n        \"code\": \"invalid_credentials\",\n        \"status_code\": 400\n    }\n}"
						},
						{
							"name": "Account Not Activated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"inactiveuser\",\n    \"password\": \"SecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"type\": \"AccountNotActivatedError\",\n        \"message\": \"Account is not activated. Please check your email for activation link.\",\n        \"code\": \"account_not_activated\",\n        \"status_code\": 400\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me",
								""
							]
						},
						"description": "Get current authenticated user's profile information. Requires valid JWT token."
					},
					"response": [
						{
							"name": "User Profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
									}
								],
								"url": {
									"raw": "{{base_url}}/api/auth/me/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"me",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"johndoe\",\n    \"email\": \"john@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"role\": \"customer\",\n    \"is_active\": true,\n    \"date_joined\": \"2024-01-01T12:00:00Z\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/auth/me/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"me",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Authentication credentials were not provided.\"\n}"
						}
					]
				},
				{
					"name": "Request Password Reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/password-reset/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"password-reset",
								""
							]
						},
						"description": "Request password reset email. Sends reset link to user's email address."
					},
					"response": [
						{
							"name": "Reset Email Sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john@example.com\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/password-reset/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"password-reset",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"If an account with this email exists, a password reset link has been sent.\"\n}"
						}
					]
				},
				{
					"name": "Confirm Password Reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{reset_token}}\",\n    \"new_password\": \"NewSecurePass123!\",\n    \"confirm_password\": \"NewSecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/password-reset/confirm/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"password-reset",
								"confirm",
								""
							]
						},
						"description": "Confirm password reset using token from email. Sets new password for user account."
					},
					"response": [
						{
							"name": "Password Reset Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"new_password\": \"NewSecurePass123!\",\n    \"confirm_password\": \"NewSecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/password-reset/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"password-reset",
										"confirm",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Password reset successfully! You can now login with your new password.\"\n}"
						},
						{
							"name": "Invalid Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"invalid-token\",\n    \"new_password\": \"NewSecurePass123!\",\n    \"confirm_password\": \"NewSecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/password-reset/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"password-reset",
										"confirm",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"type\": \"InvalidTokenError\",\n        \"message\": \"Invalid password reset token.\",\n        \"code\": \"invalid_token\",\n        \"status_code\": 400\n    }\n}"
						}
					]
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access);",
									"    console.log('Token refreshed successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/token/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Refresh JWT access token using refresh token. Returns new access token."
					},
					"response": [
						{
							"name": "Token Refreshed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/token/refresh/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}"
						}
					]
				}
			],
			"description": "Complete authentication flow including registration, activation, login, and password reset."
		},
		{
			"name": "Test Scenarios",
			"item": [
				{
					"name": "Complete Registration Flow",
					"item": [
						{
							"name": "1. Register User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"TestPass123!\",\n    \"confirm_password\": \"TestPass123!\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"register",
										""
									]
								}
							}
						},
						{
							"name": "2. Try Login (Should Fail - Account Inactive)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"TestPass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login",
										""
									]
								}
							}
						},
						{
							"name": "3. Activate Account (Use token from email)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{activation_token}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/activate/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"activate",
										""
									]
								}
							}
						},
						{
							"name": "4. Login (Should Succeed)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"TestPass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login",
										""
									]
								}
							}
						},
						{
							"name": "5. Get User Profile",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/auth/me/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"me",
										""
									]
								}
							}
						}
					],
					"description": "Test the complete user registration and activation flow"
				},
				{
					"name": "Password Reset Flow",
					"item": [
						{
							"name": "1. Request Password Reset",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/password-reset/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"password-reset",
										""
									]
								}
							}
						},
						{
							"name": "2. Confirm Password Reset",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{reset_token}}\",\n    \"new_password\": \"NewTestPass123!\",\n    \"confirm_password\": \"NewTestPass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/password-reset/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"password-reset",
										"confirm",
										""
									]
								}
							}
						},
						{
							"name": "3. Login with New Password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"NewTestPass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login",
										""
									]
								}
							}
						}
					],
					"description": "Test the complete password reset flow"
				}
			],
			"description": "Pre-configured test scenarios for common authentication flows"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default values if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}",
					"",
					"if (!pm.environment.get('username')) {",
					"    pm.environment.set('username', 'johndoe');",
					"}",
					"",
					"if (!pm.environment.get('email')) {",
					"    pm.environment.set('email', 'john@example.com');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
